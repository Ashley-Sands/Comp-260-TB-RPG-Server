# definisons for all protocols python and c#

# Template
Protocol name       : Template
Protocol identity   : [identity char]
Message Origin      : [Client/Server]
Services            : [serves(S/R)]
Message Action      :
    Server          :
    Client          :
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - [Type]        [name]
    - [Type]        [name]

================================================================================

Protocol name       : server status
Protocol identity   : !
Message Origin      : server
Services            : ALL (S)
Message Action      :
    Server          : Sent from the server to the client with the current status
                      of the users request.
    Client          :
Other Details       : This will be mostly used for errors.
Status types        :
                (add 'SS_' to start in python)
                - SERVER            = 0
                - LOBBY_REQUEST     = 1
                -
Data
    - string        from_client_name         nickname of origin
    - int           status_type
    - bool          ok
    - string        message

================================================================================

Protocol name       : client status
Protocol identity   : ?
Message Origin      : server
Services            : ALL (S)
Message Action      :
    Server          : Sent from the server to the client with the current status
                      of the users request.
    Client          :
Other Details       : This will be mostly used for errors.
Status types        :
                (add 'CS_' to start in python)
                - CLIENT            = 0
                - SCENE_READY       = 1
                -
Data
    - string        from_client_name         nickname of origin
    - int           status_type
    - bool          ok
    - string        message

================================================================================

Protocol name       : identity request
Protocol identity   : i
Message Origin      : Server
services            : Auth(S/R), Lobby(R), Game(R)
Message Action      : The request from the auth server for the players id
    Server          : Auth sends an empty request to the client for there identity
                      when received by,
                        Auth : Registers the client into the network
                        Other: Checks that the client has arrived at the correct location
                      Once the clients identity has been receive they are send a identity status update
    Client          : When received fills in the required data and returns it to the server.
Other Details       : Once the user has registered the passthrough will auth the client.
Data
    - string        from_client_name         nickname of origin
    - int           client_id                the unique client id in the server
    - string        nickname                 the nick name of the client
    - string        reg_key                  clients reg key for if they get disconnected

================================================================================

Protocol name       : identity status
Protocol identity   : I
Message Origin      : Server
Services            : Auth(S)
Message Action      :
    Server          : gives the client a status update on there identity
    Client          :
Other Details       :
Data
    - string        from_client_name        SERVER
    - string        client_id               the id of the client in the db
    - string        reg_key                 the clients reg key
    - bool          ok                      status

================================================================================

Protocol name       : lobby list
Protocol identity   : 'l'               (lower L)
Message Origin      : Server
Services            : lobby(S)
Message Action      : sent from server to the client every 30 odd seconds while the client is connected
    Server          :
    Client          :
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - string[]      lobby_names
    - int[]         lobby_ids
    - int[]         current_clients
    - int[]         max_clients

================================================================================

Protocol name       : SceneRequest
Protocol identity   : s
Message Origin      : Server
Services            : Selector(S)
Message Action      : Sent from the sever to signle a new level to load
    Server          :
    Client          : loads the requested level
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - string        scene_name

================================================================================

Protocol name       : Join lobby Request
Protocol identity   : L
Message Origin      : Client
Services            : Lobbies (R)
Message Action      :
    Client          : Sent from the client to the server to request joining the server
    Server          : Received from client returns a change scene request if ok otherwise
                      returns STATUS message with type lobbyJoin (not ok)
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - int           lobby_id

================================================================================

Protocol name       : Lobby client list
Protocol identity   : C
Message Origin      : Server
Services            : Lobby (S)
Message Action      :
    Server          : sent from the server to the client with a list of clients including them-self
    Client          :
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - int[]         client_ids
    - string[]      client_nicknames

================================================================================

Protocol name       : Lobby Info
Protocol identity   : O
Message Origin      : Server
Services            : Lobby(S)
Message Action      :
    Server          : Send lobby info to the client
    Client          :
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - string        level_name
    - int           min_players
    - int           max_players
    - float         start_time              time till start, <0 not ready to start :)

================================================================================

Protocol name       : message
Protocol identity   : m
Message Origin      : Client
Services            : lobby(R/S), game(R/S)
Message Action      : Sent from clients to other clients
    Client          :
    Server          : send to all other clients
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - int[]         to_client_ids            none is all clients
    - string        message

================================================================================

Protocol name       : ping
Protocol identity   : &
Message Origin      : Client
Services            : [serves(S/R)]
Message Action      : Sent from the client to the server
    Server          : where the server then processes and returns the package.
    Client          :
Other Details       :
Data
    - string        from_client_name         nickname of origin
    - double        client_send_time
    - double        server_receive_time

================================================================================

Protocol name       : move player
Protocol identity   : M
Message Origin      : Client
Services            : game(S/R)
Message Action      : Sent from the client to the server
    Server          : distrabutes the action among other clients
    Client          :
Other Details       :
Data
    - string        from_client_name        nickname of origin
    - int           player_id
    - float         x                       x position
    - float         y                       y position
    - float         z                       z position

================================================================================
